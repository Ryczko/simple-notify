{"version":3,"sources":["../src/index.ts","../src/utils.ts","../src/consts.ts","../src/effects.ts"],"names":["src_exports","__export","Notify","__toCommonJS","stringToHTML","strHTML","parser","content","getSvgNode","svg","doc","CLASSNAMES","NOTIFY_STATUS_ENUMS","NOTIFY_TYPE_ENUMS","NOTIFY_ANIMATION_ENUMS","ICONS","close_default","success_default","error_default","warning_default","info_default","fadeIn","self","fadeOut","slideIn","slideOut","args","callback","notificationsGap","notificationsPadding","status","effect","type","title","text","showIcon","customIcon","customClass","speed","showCloseButton","autoclose","autotimeout","position","customWrapper","container","closeWrapper","contentWrapper","titleElement","textElement","computedIcon","iconWrapper","observer","entries"],"mappings":"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","sourcesContent":["import './style.css'\nimport { fadeIn, fadeOut, slideIn, slideOut } from './effects'\nimport type { notifyEffect, notifyStatus, notifyType, notifyPosition, IArgs } from './types'\nimport { stringToHTML } from './utils'\nimport { CLASSNAMES, NOTIFY_TYPE_ENUMS, NOTIFY_ANIMATION_ENUMS, NOTIFY_STATUS_ENUMS, ICONS } from './consts';\n\nexport default class Notify {\n  wrapper: HTMLElement\n  customWrapper: string\n  container: HTMLElement\n  status: notifyStatus\n  type: notifyType\n  effect: notifyEffect\n  position: notifyPosition\n  title: string\n  text: string\n  showIcon: boolean\n  customIcon: string\n  showCloseButton: boolean\n  customClass: string\n  speed: number\n  autoclose: boolean\n  autotimeout: number\n  notificationsGap: number\n  notificationsPadding: number\n  selectedNotifyInEffect: (self: Notify) => void\n  selectedNotifyOutEffect: (self: Notify) => void\n\n  constructor(args: IArgs) {\n    const {\n      notificationsGap = 20,\n      notificationsPadding = 20,\n      status,\n      effect = NOTIFY_ANIMATION_ENUMS.FADE,\n      type = 'outline',\n      title,\n      text,\n      showIcon = true,\n      customIcon = '',\n      customClass = '',\n      speed = 500,\n      showCloseButton = true,\n      autoclose = false,\n      autotimeout = 3000,\n      position = 'right top',\n      customWrapper = ''\n    } = args\n\n    this.customWrapper = customWrapper\n    this.status = status\n    this.title = title\n    this.text = text\n    this.showIcon = showIcon\n    this.customIcon = customIcon\n    this.customClass = customClass\n    this.speed = speed\n    this.effect = effect\n    this.showCloseButton = showCloseButton\n    this.autoclose = autoclose\n    this.autotimeout = autotimeout\n    this.notificationsGap = notificationsGap\n    this.notificationsPadding = notificationsPadding\n    this.type = type\n    this.position = position\n\n    if (!this.checkRequirements()) {\n      console.error(\"You must specify 'title' or 'text' at least.\")\n      return\n    }\n\n    // set outer container for all Notify's\n    this.setContainer()\n\n    // set wrapper for each Notify\n    this.setWrapper()\n\n    this.setPosition()\n\n    // set icon in the left\n    if (this.showIcon) this.setIcon()\n\n    // set close button\n    if (this.showCloseButton) this.setCloseButton()\n\n    // set title, text\n    this.setContent()\n\n    // add the Notify to our container\n    this.container.prepend(this.wrapper)\n\n    // init effect\n    this.setEffect()\n    this.notifyIn(this.selectedNotifyInEffect)\n\n    // init autoclose\n    if (this.autoclose) this.autoClose()\n\n    // check whether Notify is visible\n    this.setObserver()\n  }\n\n  private checkRequirements(): boolean {\n    return !!(this.title || this.text)\n  }\n\n  private setContainer(): void {\n    const container: HTMLElement = document.querySelector(`.${CLASSNAMES.CONTAINER}`)\n    if (container) {\n      this.container = container\n    } else {\n      this.container = document.createElement('div')\n      this.container.classList.add(CLASSNAMES.CONTAINER)\n      document.body.appendChild(this.container)\n    }\n\n    if (this.notificationsPadding) {\n      this.container.style.setProperty('--sn-notifications-padding', `${this.notificationsPadding}px`)\n    }\n\n    if (this.notificationsGap) {\n      this.container.style.setProperty('--sn-notifications-gap', `${this.notificationsGap}px`)\n    }\n  }\n\n  private setPosition(): void {\n    this.container.classList[this.position === 'center' ? 'add' : 'remove'](CLASSNAMES.IS_CENTER)\n    this.container.classList[this.position.includes('left') ? 'add' : 'remove'](CLASSNAMES.IS_LEFT)\n    this.container.classList[this.position.includes('right') ? 'add' : 'remove'](CLASSNAMES.IS_RIGHT)\n    this.container.classList[this.position.includes('top') ? 'add' : 'remove'](CLASSNAMES.IS_TOP)\n    this.container.classList[this.position.includes('bottom') ? 'add' : 'remove'](CLASSNAMES.IS_BOTTOM)\n    this.container.classList[this.position.includes('x-center') ? 'add' : 'remove'](CLASSNAMES.IS_X_CENTER)\n    this.container.classList[this.position.includes('y-center') ? 'add' : 'remove'](CLASSNAMES.IS_Y_CENTER)\n  }\n\n  private setCloseButton(): void {\n    const closeWrapper = document.createElement('div')\n    closeWrapper.classList.add(CLASSNAMES.NOTIFY_CLOSE)\n    closeWrapper.innerHTML = ICONS.CLOSE\n    this.wrapper.appendChild(closeWrapper)\n\n    closeWrapper.addEventListener('click', () => {\n      this.close()\n    })\n  }\n\n  private setWrapper(): void {\n    if (this.customWrapper) {\n      this.wrapper = stringToHTML(this.customWrapper)\n    } else {\n      this.wrapper = document.createElement('div')\n    }\n    this.wrapper.style.setProperty('--sn-notify-transition-duration', `${this.speed}ms`)\n\n    // set classes\n    this.wrapper.classList.add(CLASSNAMES.NOTIFY)\n\n    switch (this.type) {\n      case NOTIFY_TYPE_ENUMS.OUTLINE:\n        this.wrapper.classList.add(CLASSNAMES.NOTIFY_OUTLINE)\n        break\n      case NOTIFY_TYPE_ENUMS.FILLED:\n        this.wrapper.classList.add(CLASSNAMES.NOTIFY_FILLED)\n        break\n      default:\n        this.wrapper.classList.add(CLASSNAMES.NOTIFY_OUTLINE)\n    }\n\n    switch (this.status) {\n      case NOTIFY_STATUS_ENUMS.SUCCESS:\n        this.wrapper.classList.add(CLASSNAMES.NOTIFY_SUCCESS)\n        break\n      case NOTIFY_STATUS_ENUMS.ERROR:\n        this.wrapper.classList.add(CLASSNAMES.NOTIFY_ERROR)\n        break\n      case NOTIFY_STATUS_ENUMS.WARNING:\n        this.wrapper.classList.add(CLASSNAMES.NOTIFY_WARNING)\n        break\n      case NOTIFY_STATUS_ENUMS.INFO:\n        this.wrapper.classList.add(CLASSNAMES.NOTIFY_INFO)\n        break\n    }\n\n    if (this.autoclose) {\n      this.wrapper.classList.add(CLASSNAMES.NOTIFY_AUTOCLOSE)\n      this.wrapper.style.setProperty('--sn-notify-autoclose-timeout', `${this.autotimeout + this.speed}ms`)\n    }\n\n    if (this.customClass) this.wrapper.classList.add(this.customClass)\n  }\n\n  private setContent(): void {\n    const contentWrapper = document.createElement('div')\n    contentWrapper.classList.add(CLASSNAMES.NOTIFY_CONTENT)\n\n    let titleElement, textElement\n\n    if (this.title) {\n      titleElement = document.createElement('div')\n      titleElement.classList.add(CLASSNAMES.NOTIFY_TITLE)\n      titleElement.textContent = this.title.trim()\n      if (!this.showCloseButton) titleElement.style.paddingRight = '0'\n    }\n\n    if (this.text) {\n      textElement = document.createElement('div')\n      textElement.classList.add(CLASSNAMES.NOTIFY_TEXT)\n      textElement.innerHTML = this.text.trim()\n      if (!this.title) textElement.style.marginTop = '0'\n    }\n\n    this.wrapper.appendChild(contentWrapper)\n    if (this.title) contentWrapper.appendChild(titleElement)\n    if (this.text) contentWrapper.appendChild(textElement)\n  }\n\n  private setIcon(): void {\n    const computedIcon = (status: notifyStatus) => {\n      switch (status) {\n        case NOTIFY_STATUS_ENUMS.SUCCESS:\n          return ICONS.SUCCESS\n        case NOTIFY_STATUS_ENUMS.ERROR:\n          return ICONS.ERROR\n          case NOTIFY_STATUS_ENUMS.WARNING:\n          return ICONS.WARNING\n        case NOTIFY_STATUS_ENUMS.INFO:\n          return ICONS.INFO\n      }\n    }\n\n    const iconWrapper = document.createElement('div')\n    iconWrapper.classList.add(CLASSNAMES.NOTIFY_ICON)\n    iconWrapper.innerHTML = this.customIcon || computedIcon(this.status)\n    if (this.status || this.customIcon) this.wrapper.appendChild(iconWrapper)\n  }\n\n  private setObserver(): void {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (!(entries[0].intersectionRatio <= 0)) {\n          return\n        } else {\n          this.close()\n        }\n      },\n      {\n        threshold: 0\n      }\n    )\n\n    setTimeout(() => {\n      observer.observe(this.wrapper)\n    }, this.speed)\n  }\n\n  private notifyIn(callback: (p: Notify) => void): void {\n    callback(this)\n  }\n\n  private notifyOut = (callback: (p: Notify) => void): void => {\n    callback(this)\n  }\n\n  private autoClose(): void {\n    setTimeout(() => {\n      this.close()\n    }, this.autotimeout + this.speed)\n  }\n\n  public close(): void {\n    this.notifyOut(this.selectedNotifyOutEffect)\n  }\n\n  private setEffect(): void {\n    switch (this.effect) {\n      case NOTIFY_ANIMATION_ENUMS.FADE:\n        this.selectedNotifyInEffect = fadeIn\n        this.selectedNotifyOutEffect = fadeOut\n        break\n      case NOTIFY_ANIMATION_ENUMS.SLIDE:\n        this.selectedNotifyInEffect = slideIn\n        this.selectedNotifyOutEffect = slideOut\n        break\n      default:\n        this.selectedNotifyInEffect = fadeIn\n        this.selectedNotifyOutEffect = fadeOut\n    }\n  }\n}\n\n(globalThis as any).Notify = Notify\n","export const stringToHTML = (strHTML: string): HTMLElement => {\n  const parser = new DOMParser(),\n    content = 'text/html',\n    DOM = parser.parseFromString(strHTML, content)\n\n  return DOM.body.childNodes[0] as HTMLElement\n}\n\nexport const getSvgNode = (svg: string) => {\n  const doc = new DOMParser().parseFromString(svg, 'application/xml')\n  const node = document.importNode(doc.documentElement, true)\n  return node.outerHTML\n}\n","import SvgClose from './icons/close.svg'\nimport SvgSuccess from './icons/success.svg'\nimport SvgWarning from './icons/warning.svg'\nimport SvgError from './icons/error.svg'\nimport SvgInfo from './icons/info.svg'\nimport { getSvgNode } from './utils'\n\nexport const CLASSNAMES = {\n  CONTAINER: 'sn-notifications-container',\n  NOTIFY: 'sn-notify',\n  NOTIFY_CONTENT: 'sn-notify-content',\n  NOTIFY_ICON: 'sn-notify-icon',\n  NOTIFY_CLOSE: 'sn-notify-close',\n  NOTIFY_TITLE: 'sn-notify-title',\n  NOTIFY_TEXT: 'sn-notify-text',\n  IS_X_CENTER: 'is-x-center',\n  IS_Y_CENTER: 'is-y-center',\n  IS_CENTER: 'is-center',\n  IS_LEFT: 'is-left',\n  IS_RIGHT: 'is-right',\n  IS_TOP: 'is-top',\n  IS_BOTTOM: 'is-bottom',\n  NOTIFY_OUTLINE: 'sn-notify-outline',\n  NOTIFY_FILLED: 'sn-notify-filled',\n  NOTIFY_ERROR: 'sn-notify-error',\n  NOTIFY_WARNING: 'sn-notify-warning',\n  NOTIFY_SUCCESS: 'sn-notify-success',\n  NOTIFY_INFO: 'sn-notify-info',\n  NOTIFY_FADE: 'sn-notify-fade',\n  NOTIFY_FADE_IN: 'sn-notify-fade-in',\n  NOTIFY_SLIDE: 'sn-notify-slide',\n  NOTIFY_SLIDE_IN: 'sn-notify-slide-in',\n  NOTIFY_AUTOCLOSE: 'sn-notify-autoclose',\n} as const;\n\nexport const NOTIFY_STATUS_ENUMS = {\n  ERROR: 'error',\n  WARNING: 'warning',\n  SUCCESS: 'success',\n  INFO: 'info',\n} as const;\n\nexport const NOTIFY_TYPE_ENUMS = {\n  OUTLINE: 'outline',\n  FILLED: 'filled',\n} as const;\n\nexport const NOTIFY_ANIMATION_ENUMS = {\n  FADE: 'fade',\n  SLIDE: 'slide',\n} as const;\n\nexport const ICONS = {\n  CLOSE: getSvgNode(SvgClose),\n  SUCCESS: getSvgNode(SvgSuccess),\n  ERROR: getSvgNode(SvgError),\n  WARNING: getSvgNode(SvgWarning),\n  INFO: getSvgNode(SvgInfo),\n};\n","import type Notify from './index'\nimport { CLASSNAMES } from './consts'\n\nexport const fadeIn = (self: Notify): void => {\n  self.wrapper.classList.add(CLASSNAMES.NOTIFY_FADE)\n  setTimeout(() => {\n    self.wrapper.classList.add(CLASSNAMES.NOTIFY_FADE_IN)\n  }, 100)\n}\n\nexport const fadeOut = (self: Notify): void => {\n  self.wrapper.classList.remove(CLASSNAMES.NOTIFY_FADE_IN)\n  setTimeout(() => {\n    self.wrapper.remove()\n  }, self.speed)\n}\n\nexport const slideIn = (self: Notify): void => {\n  self.wrapper.classList.add(CLASSNAMES.NOTIFY_SLIDE)\n  setTimeout(() => {\n    self.wrapper.classList.add(CLASSNAMES.NOTIFY_SLIDE_IN)\n  }, 100)\n}\nexport const slideOut = (self: Notify): void => {\n  self.wrapper.classList.remove(CLASSNAMES.NOTIFY_SLIDE_IN)\n  setTimeout(() => {\n    self.wrapper.remove()\n  }, self.speed)\n}\n"]}